import React from 'react';
import { usePWA } from '../hooks/usePWA';

const PWAQuickTest: React.FC = () => {
  const { isInstalled, isInstallable, isOnline, isIOS } = usePWA();

  const runQuickTest = () => {
    const results = [];
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π PWA
    if ('serviceWorker' in navigator) {
      results.push('‚úÖ Service Worker –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
    } else {
      results.push('‚ùå Service Worker –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
    }

    if (document.querySelector('link[rel="manifest"]')) {
      results.push('‚úÖ –ú–∞–Ω–∏—Ñ–µ—Å—Ç –Ω–∞–π–¥–µ–Ω');
    } else {
      results.push('‚ùå –ú–∞–Ω–∏—Ñ–µ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }

    if (location.protocol === 'https:' || location.hostname === 'localhost') {
      results.push('‚úÖ HTTPS —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ');
    } else {
      results.push('‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è HTTPS');
    }

    if (isOnline) {
      results.push('‚úÖ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ');
    } else {
      results.push('‚ö†Ô∏è –û—Ñ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º');
    }

    if (isInstalled) {
      results.push('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    } else if (isInstallable) {
      results.push('‚ö†Ô∏è –ú–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å');
    } else {
      results.push('‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
    }

    alert(results.join('\n'));
  };

  return (
    <button
      onClick={runQuickTest}
      style={{
        position: 'fixed',
        top: '60px',
        right: '10px',
        background: '#2196F3',
        color: 'white',
        border: 'none',
        borderRadius: '20px',
        padding: '8px 16px',
        cursor: 'pointer',
        fontSize: '12px',
        zIndex: 999
      }}
    >
      üîç –¢–µ—Å—Ç PWA
    </button>
  );
};

export default PWAQuickTest;
